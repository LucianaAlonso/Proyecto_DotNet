// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sanatorio.Models;

namespace Proyecto.Migrations
{
    [DbContext(typeof(SanatorioContext))]
    partial class SanatorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Sanatorio.Models.Admin", b =>
                {
                    b.Property<string>("Usuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Usuario");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Sanatorio.Models.Autoridad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreYApellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RolAutoridad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Autoridad");
                });

            modelBuilder.Entity("Sanatorio.Models.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreYApellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RolEnEspecialidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Sanatorio.Models.Nota", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cuerpo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URLImagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URLNotaCompleta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("Sanatorio.Models.ObraSocial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ObraSocial");
                });

            modelBuilder.Entity("Sanatorio.Models.Plan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ObraSocialID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ObraSocialID");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("Sanatorio.Models.Turno", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaYHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("PacienteMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PacienteMail");

                    b.ToTable("Turno");
                });

            modelBuilder.Entity("Sanatorio.Models.Usuario", b =>
                {
                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObraSocial")
                        .HasColumnType("TEXT");

                    b.HasKey("Mail");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Sanatorio.Models.Plan", b =>
                {
                    b.HasOne("Sanatorio.Models.ObraSocial", "ObraSocial")
                        .WithMany("Planes")
                        .HasForeignKey("ObraSocialID");
                });

            modelBuilder.Entity("Sanatorio.Models.Turno", b =>
                {
                    b.HasOne("Sanatorio.Models.Usuario", "Paciente")
                        .WithMany("Turnos")
                        .HasForeignKey("PacienteMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
